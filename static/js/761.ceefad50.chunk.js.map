{"version":3,"file":"static/js/761.ceefad50.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","redux/filter/filters-selectors.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Message/Message.module.css?e83e","components/Message/Message.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Contact_wrap__oQYRQ\",\"icon\":\"Contact_icon__uPRlS\",\"button\":\"Contact_button__F+kJb\",\"title\":\"Contact_title__6kEjN\"};","import PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { FaTrashAlt, FaUserAlt } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nfunction Contact({ name, number, contactId }) {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      <div className={css.wrap}>\n        <span className={css.icon}>\n          <FaUserAlt />\n        </span>\n        <p className={css.title}>{name}</p>\n      </div>\n      <div className={css.wrap}>\n        <p className={css.number}>{number}</p>\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={handleDeleteContact}\n        >\n          <FaTrashAlt />\n        </button>\n      </div>\n    </>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","export const selectFilter = store => store.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filters-selectors';\n\nexport const selectContacts = store => store.contacts.items;\n\nexport const selectIsLoading = store => store.contacts.isLoading;\nexport const selectError = store => store.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      const normalizedName = name.toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport Contact from 'components/Contact/Contact';\nimport { selectFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li className={css.item} key={contact.id}>\n            <Contact\n              name={contact.name}\n              number={contact.number}\n              onDeleteContact={onDeleteContact}\n              contactId={contact.id}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n// import { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChangeName = e => setName(e.currentTarget.value);\n  const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    // const newElement = { id: nanoid(), name, number };\n\n    contacts.some(contact => contact.name === name)\n      ? Report.warning(\n          `${name}`,\n          'This user is already in the contact list.',\n          'OK'\n        )\n      : dispatch(addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmitForm}>\n      <label className={css.label}>\n        <span>Name</span>\n        <input\n          className={css.input}\n          onChange={onChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        <span className={css.title}>Number</span>\n        <input\n          className={css.input}\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { selectFilter } from 'redux/filter/filters-selectors';\nimport { setFilter } from 'redux/filter/filter-slise';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onSetFilter = payload => {\n    dispatch(setFilter(payload));\n  };\n  const onChange = event => {\n    onSetFilter(event.target.value);\n  };\n\n  return (\n    <label className={css.label}>\n      <p className={css.text}>Find contacts by name</p>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Message_wrap__KJDSL\",\"text\":\"Message_text__aMVcH\"};","import css from './Message.module.css';\n\nexport const Message = () => {\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>Contact list is empty.</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsPage_wrapper__HYOyv\",\"title\":\"ContactsPage_title__P3MkR\"};","import { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Message } from 'components/Message/Message';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\nimport { useSelector } from 'react-redux';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <div className={css.wrapper}>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={css.subtitle}>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Loading...</b>}\n      {error && error}\n      {contacts.length > 0 ? <ContactList /> : <Message />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["name","number","contactId","dispatch","useDispatch","className","css","type","onClick","deleteContact","selectFilter","store","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useSelector","onDeleteContact","id","map","contact","ContactForm","useState","setName","setNumber","reset","onSubmit","e","preventDefault","some","Report","addContact","onChange","currentTarget","value","pattern","title","required","Filter","event","payload","target","setFilter","Message","length"],"sourceRoot":""}