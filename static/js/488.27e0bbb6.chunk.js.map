{"version":3,"file":"static/js/488.27e0bbb6.chunk.js","mappings":"yLACA,MAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAmI,6B,uCCoFnI,EA7EqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAyBjB,OACE,0BACE,kBAAMC,UAAWC,EAAUC,SAzBV,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAW,CACfC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,OAEnCZ,GAASe,EAAAA,EAAAA,IAASN,IAOdA,EAASK,SAASE,OAAS,EAC7BC,EAAAA,GAAAA,MAAY,+CAIdV,EAAKW,OACN,EAIsDC,aAAa,MAAhE,WACE,mBAAOjB,UAAWC,EAAlB,UAA6B,YAE3B,kBACED,UAAWC,EACXiB,KAAK,OACLV,KAAK,OACLW,YAAY,WACZC,UAAQ,QAGZ,mBAAOpB,UAAWC,EAAlB,UAA6B,SAE3B,kBACED,UAAWC,EACXiB,KAAK,QACLV,KAAK,QACLW,YAAY,QACZC,UAAQ,QAGZ,mBAAOpB,UAAWC,EAAlB,UAA6B,YAE3B,kBACED,UAAWC,EACXiB,KAAK,WACLV,KAAK,WACLW,YAAY,WACZC,UAAQ,QAGZ,mBAAOpB,UAAWC,EAAlB,UAA6B,oBAE3B,kBACED,UAAWC,EACXiB,KAAK,WACLV,KAAK,kBACLW,YAAY,mBACZC,UAAQ,QAGZ,mBAAQpB,UAAWC,EAAYiB,KAAK,SAApC,SAA6C,iBAMpD,ECzED,EARqB,WACnB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"button\":\"RegisterForm_button__B3hFq\"};","// import { useNavigate } from 'react-router-dom';\nimport css from './RegisterForm.module.css';\n// import { ProgressBar } from 'react-loader-spinner';\nimport { register } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\n// import { useState } from 'react';\nimport { toast } from 'react-hot-toast';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formData = {\n      name: form.elements.name.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n    dispatch(register(formData));\n\n    // if (formData.password !== formData.confirmPassword) {\n    //   toast.error('Passwords do not match');\n    //   return;\n    // }\n\n    if (formData.password.length < 8) {\n      toast.error('Password must be at least 8 characters long');\n      return;\n    }\n\n    form.reset();\n  };\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <label className={css.label}>\n          Username\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Username\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Email\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Confirm Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            required\n          />\n        </label>\n        <button className={css.button} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","formData","name","elements","value","email","password","register","length","toast","reset","autoComplete","type","placeholder","required"],"sourceRoot":""}